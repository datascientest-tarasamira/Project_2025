apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: {{ include "wordpress-secure.namespace" . }}
  labels:
    {{- include "wordpress-secure.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
      {{- include "wordpress-secure.labels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
        {{- include "wordpress-secure.labels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.mysql.primary.podSecurityContext | nindent 8 }}
      containers:
      - name: mysql
        image: mysql:8.3.0
        securityContext:
          {{- toYaml .Values.mysql.primary.containerSecurityContext | nindent 10 }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-database
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-pv
          mountPath: /var/lib/mysql
        resources:
          {{- toYaml .Values.mysql.primary.resources | nindent 10 }}
        readinessProbe:
          exec:
            command:
            - mysql
            - -uroot
            - -p$(MYSQL_ROOT_PASSWORD)
            - -e
            - SELECT 1
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: mysql-pv
        persistentVolumeClaim:
          claimName: mysql-pvc